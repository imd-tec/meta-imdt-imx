#@TYPE: Machine
#@NAME: IMDT Pico e Board [IM-PCA-0010]
#@SOC: i.MX8MP
#@DESCRIPTION: Machine configuration for the IMDT Pico-E Board
#@MAINTAINER: William Bagshaw <william.bagshaw@imd-tec.com>

#
KERNEL_DEVICETREE_BASENAME = "imx8mp-imdt-pico-e"

# Set DDR FIRMWARE
DDR_FIRMWARE_VERSION = "202006"
DDR_FIRMWARE_NAME = " \
	lpddr4_pmu_train_1d_dmem_${DDR_FIRMWARE_VERSION}.bin \
	lpddr4_pmu_train_1d_imem_${DDR_FIRMWARE_VERSION}.bin \
	lpddr4_pmu_train_2d_dmem_${DDR_FIRMWARE_VERSION}.bin \
	lpddr4_pmu_train_2d_imem_${DDR_FIRMWARE_VERSION}.bin \
"

IMXBOOT_TARGETS_BASENAME = "flash_evk"
WKS_FILE = "imdt-image.wks.in"

MACHINEOVERRIDES =. "imx-boot-container:mx8:mx8m:mx8mp:imdt-pico:imdt-pico-e:"

require conf/machine/include/imx-base.inc
require conf/machine/include/tune-cortexa53.inc

# nxp8997 is required to load the nxp89xx driver. the specific model of our wifi chip is actually sd8978(iw416)
MACHINE_FEATURES += "wifi bluetooth bcm43430 imdt-pci optee nxp8997 imdt-ethernet imdt-can imdt-rng imdt-rtc"

# NXP BSP can consume proprietary jailhouse and Marvell drivers
# OP-TEE is also applicable to NXP BSP, mainline BSP seems not to have
# a full support for it yet.
MACHINE_FEATURES_append_use-nxp-bsp = " optee jailhouse nxp8997"

# Don't include kernels in standard images
RDEPENDS_${KERNEL_PACKAGE_NAME}-base = ""

# Mainline kernel contains only one DTB file for
# imx8mpevk machine
KERNEL_DEVICETREE = " \
    freescale/${KERNEL_DEVICETREE_BASENAME}.dtb \
"

UBOOT_DTB_NAME = "${KERNEL_DEVICETREE_BASENAME}.dtb"

IMX_DEFAULT_BOOTLOADER_use-nxp-bsp = "u-boot-imx"
IMX_DEFAULT_BOOTLOADER_use-mainline-bsp = "u-boot-fslc"

UBOOT_SUFFIX = "bin"

UBOOT_CONFIG_BASENAME = "imx8mp_imdt_pico_e"

UBOOT_CONFIG ??= "sd"
UBOOT_CONFIG[fspi]    = "${UBOOT_CONFIG_BASENAME}_defconfig"
UBOOT_CONFIG[sd]      = "${UBOOT_CONFIG_BASENAME}_defconfig,sdcard"
UBOOT_CONFIG[ecc]     = "${UBOOT_CONFIG_BASENAME}_inline_ecc_defconfig"
UBOOT_CONFIG[mfgtool] = "${UBOOT_CONFIG_BASENAME}_defconfig"

SPL_BINARY = "spl/u-boot-spl.bin"

ATF_PLATFORM = "imx8mp"
ATF_LOAD_ADDR = "0x970000"

# Extra firmware package name, that is required to build boot container for fslc bsp
IMX_EXTRA_FIRMWARE = "firmware-imx-8m"

IMXBOOT_TARGETS = \
    "${@bb.utils.contains('UBOOT_CONFIG', 'fspi', '${IMXBOOT_TARGETS_BASENAME}_flexspi', \
                                                  '${IMXBOOT_TARGETS_BASENAME}', d)}"

IMX_BOOT_SOC_TARGET = "iMX8MP"

SERIAL_CONSOLES = "115200;ttymxc1"

LOADADDR = ""
UBOOT_SUFFIX = "bin"
UBOOT_MAKE_TARGET = "all"
IMX_BOOT_SEEK = "32"

OPTEE_BIN_EXT = "8mp"
TEE_LOAD_ADDR = "0x56000000"

# Remove Atheros firmware
MACHINE_FIRMWARE_remove_mx8 = " linux-firmware-ath10k"

# Create a .tar.gz archive for use with SWUpdate
SOC_DEFAULT_IMAGE_FSTYPES_append = " tar.gz"

# U-Boot firmware utilities
PREFERRED_PROVIDER_u-boot-fw-utils = "libubootenv"

#couldn't find a way to get this to work layer.conf conditionally, thought here is the best place for it as it only gets included when building for this machine which in turn has the murata layer.
BBMASK += "meta-murata-wireless/recipes-kernel/linux/linux-imx_%.bbappend"
